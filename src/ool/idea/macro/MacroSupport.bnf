{
  parserClass="ool.idea.macro.parser.MacroSupportParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="MacroSupport"
  psiImplClassSuffix="Impl"
  psiPackage="ool.idea.macro.psi"
  psiImplPackage="ool.idea.macro.psi.impl"

  elementTypeHolderClass="ool.idea.macro.psi.MacroSupportTypes"
  elementTypeClass="ool.idea.macro.psi.MacroSupportElementType"
  tokenTypeClass="ool.idea.macro.psi.MacroSupportTokenType"
//  psiImplUtilClass="ool.idea.macro.psi.impl.MacroSupportPsiImplUtil"
}

macroFile ::= item_*

private item_ ::= (COMMENTS|
    template_oxy_code|
    block_statement|
    block_open_statement|
    block_close_statement|
    directive_statement|
    directive_open_statement|
    directive_param_wrapper|
    TEMPLATE_HTML_CODE|TEMPLATE_JAVASCRIPT_CODE|
    INNER_TEMPLATE_ELEMENT|OUTER_TEMPLATE_ELEMENT|
    OPEN_BLOCK_MARKER|OPEN_BLOCK_MARKER_PRINT|OPEN_BLOCK_MARKER_DIRECTIVE|CLOSE_BLOCK_MARKER|
    DIRECTIVE|DIRECTIVE_PARAM|DIRECTIVE_PARAM_BOUNDARY)

template_oxy_code ::= directive_statement

block_open_statement ::= OPEN_BLOCK_MARKER | OPEN_BLOCK_MARKER_PRINT
block_close_statement ::= CLOSE_BLOCK_MARKER
block_statement ::= (block_open_statement TEMPLATE_JAVASCRIPT_CODE block_close_statement)

directive_param_wrapper ::= (DIRECTIVE_PARAM_BOUNDARY DIRECTIVE_PARAM DIRECTIVE_PARAM_BOUNDARY)
directive_open_statement ::= OPEN_BLOCK_MARKER_DIRECTIVE
directive_statement ::= (directive_open_statement DIRECTIVE directive_param_wrapper* block_close_statement)
